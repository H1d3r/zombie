name: goreleaser

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:

jobs:
  goreleaser:
    runs-on: ubuntu-20.04
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
          submodules: recursive

      - name: Install upx
        run: sudo apt install upx zip -y
        continue-on-error: true

      - name: Set up GCC
        uses: egor-tensin/setup-gcc@v1
        with:
          version: latest
          platform: x64
      -
        name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.22
      -
        name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v4
        with:
          distribution: goreleaser
          version: latest
          args: release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GOPATH: "/home/runner/go"

      - name: Set up Go 1.17
        uses: actions/setup-go@v3
        with:
          go-version: '1.17'

      - name: Compile for Windows x64
        run: go build -o dist/zombie_windows7_amd64.exe -ldflags "-s -w" -tags="forceposix nobar" -asmflags "all=-trimpath=${{ env.GOPATH }}" -gcflags "all=-trimpath=${{ env.GOPATH }}" .
        env:
          GOOS: windows
          GOARCH: amd64

      - name: Compile for Windows x86
        run: go build -o dist/zombie_windows7_386.exe -ldflags "-s -w"  -tags="forceposix nobar" -asmflags "all=-trimpath=${{ env.GOPATH }}" -gcflags "all=-trimpath=${{ env.GOPATH }}" .
        env:
          GOOS: windows
          GOARCH: '386'

      - name: Zip files
        run: zip -r -j dist/zombie_archive.zip dist/zombie* README.md

      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: dist/zombie*
          tag: ${{ github.ref }}
          overwrite: true
          file_glob: true
          draft: true